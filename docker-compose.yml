services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: kanban_api
      POSTGRES_USER: kanban_user
      POSTGRES_PASSWORD: kanban_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kanban-network

  # NestJS Implementation
  nestjs-api:
    build:
      context: ./nestjs-implementation
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    env_file:
      - ./nestjs-implementation/.env
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=kanban_api
      - DATABASE_USER=kanban_user
      - DATABASE_PASSWORD=kanban_password
    depends_on:
      - postgres
    volumes:
      - ./nestjs-implementation:/app
      - /app/node_modules
    networks:
      - kanban-network

  # pgAdmin for PostgreSQL visualization
  pgadmin:
    image: dpage/pgadmin4:8
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_SERVER_JSON_FILE: /pgadmin4/servers.json
      PGADMIN_REPLACE_SERVERS_ON_STARTUP: 'True'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - kanban-network
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json:ro
      - ./pgadmin/pgpass:/pgadmin4/pgpass:ro
      - pgadmin_data:/var/lib/pgadmin
    user: "root"
    entrypoint: >
      /bin/sh -c "\
      cp -f /pgadmin4/pgpass /var/lib/pgadmin/pgpass && \
      chmod 600 /var/lib/pgadmin/pgpass && \
      chown 5050:5050 /var/lib/pgadmin/pgpass && \
      /entrypoint.sh"

volumes:
  postgres_data:
  pgadmin_data:

networks:
  kanban-network:
    driver: bridge
